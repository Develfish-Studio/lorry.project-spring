package {{package.name}};

import {{package.name}}.config.{{module.pascal_name}}Config;
import studio.develfish.guppy.common.api.config.CommonBeanConfig;
{%- if plugins is containing('common_events') %}
import studio.develfish.guppy.common.events.config.CloudEventsBeanConfig;
import studio.develfish.guppy.common.events.config.CloudEventsKafkaConfig;
{%- endif %}
{%- if plugins is containing('common_minio') %}
import studio.develfish.guppy.common.minio.config.MinioBeanConfig;
import studio.develfish.guppy.common.minio.config.MinioConfig;
{%- endif %}
{%- if plugins is containing('common_web') %}
import studio.develfish.guppy.common.web.config.OpenApiConfig;
import studio.develfish.guppy.common.web.config.OpenApiSecurityConfig;
import studio.develfish.guppy.common.web.config.WebMvcConfig;
import studio.develfish.guppy.common.web.config.WebMvcSecurityConfig;
{%- endif %}
{%- if plugins is containing('common_ws') %}
import studio.develfish.guppy.common.ws.config.WebSocketConfig;
import studio.develfish.guppy.common.ws.config.WebSocketHubConfig;
{%- endif %}
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
{%- if plugins is containing('common_jpa') %}
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
{%- endif %}

@Configuration
@Import({
        CommonBeanConfig.class,
        {%- if plugins is containing('common_web') %}
        WebMvcConfig.class,
        WebMvcSecurityConfig.class,
        OpenApiConfig.class,
        OpenApiSecurityConfig.class,
        {%- endif %}
        {%- if plugins is containing('common_ws') %}
        WebSocketConfig.class,
        WebSocketHubConfig.class,
        {%- endif %}
        {%- if plugins is containing('common_events') %}
        CloudEventsKafkaConfig.class,
        CloudEventsBeanConfig.class,
        {%- endif %}
        {%- if plugins is containing('common_minio') %}
        MinioConfig.class,
        MinioBeanConfig.class,
        {%- endif %}
        {%- for config in configs %}
        {{config}}.class,
        {%- endfor %}
})
@ComponentScan(basePackageClasses = {{module.pascal_name}}Config.class)
{%- if plugins is containing('common_jpa') %}
@EnableJpaRepositories
{%- endif %}
public class {{module.suite_class}} {
}
